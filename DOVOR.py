# -*- coding:utf8 -*-
while(1):
    print u"系统功能：\n" \
          u"1：提取CVE信息，并获取其ID\n" \
          u"2：自动解析和生成已有的open source Projects\n" \
          u"3：生成open source projects中潜在漏洞的描述(由于此功能需要在远程服务器进行，在此无法演示)\n" \
          u"4：自动生成潜在漏洞和已知漏洞的关联网站网页和内容(此功能需要翻墙进行)\n" \
          u"5：展示潜在漏洞和已知漏洞的关联关系的相似性(此步由于需要数据，需要在本机执行)\n" \
          u"请输入要测试的功能：\n"
    switch=input()
    if switch==1:
        try:
            from get_CVE_Description import get_description
            get_des=get_description.des()
            print u"CVE信息已经提取完成！请查看生成文件\n"
        except:
            print u"CVE信息提取失败，请检查路径后重试！\n"
    if switch==2:
        try:
            from get_url import get_all_url
            func=get_all_url.get_url
            func()
            print u"已成功生成已有的open source Projects！请查看生成文件\n"
        except:
            print u"生成open source Projects失败，请重试！\n"
#    if switch==3:
#        try:

#        except:
    if switch==4:
        try:
            from bug_commit_get_search_local import main
            main.func()
            print u"自动生成潜在漏洞和已知漏洞的关联网站网页和内容,成功！"
        except:
            print u"生成失败，请重试！"
   # if switch==5:
   #     try:
   #         from Display import train_classifair
   #         train_classifair.func()
   #     except:
   #         print "生成失败，请重试！"
    if switch!=1 and switch!=2:
        print u"输入有误，请重新输入：\n"

